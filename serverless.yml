service:
  name: quotebot-ui

# Add the serverless-webpack plugin
plugins:
  - serverless-finch
  - serverless-webpack
  - serverless-offline
  - serverless-domain-manager

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  runtime: nodejs8.10

functions:
  api:
    handler: handler.handler
    environment:
      DYNAMODB_ACCESS_KEY: ${file(./serverless.variables.${self:provider.stage, 'dev'}.yml):DYNAMODB_ACCESS_KEY}
      DYNAMODB_SECRET: ${file(./serverless.variables.${self:provider.stage, 'dev'}.yml):DYNAMODB_SECRET}
      DYNAMODB_REGION: ${file(./serverless.variables.${self:provider.stage, 'dev'}.yml):DYNAMODB_REGION}
      DYNAMODB_AUTHORIZATION_ACCESS_KEY: ${file(./serverless.variables.${self:provider.stage, 'dev'}.yml):DYNAMODB_AUTHORIZATION_ACCESS_KEY}
      DYNAMODB_AUTHORIZATION_SECRET: ${file(./serverless.variables.${self:provider.stage, 'dev'}.yml):DYNAMODB_AUTHORIZATION_SECRET}
      DYNAMODB_AUTHORIZATION_REGION: ${file(./serverless.variables.${self:provider.stage, 'dev'}.yml):DYNAMODB_AUTHORIZATION_REGION}
      AUTHORIZATION_TABLE_NAME: ${file(./serverless.variables.${self:provider.stage, 'dev'}.yml):AUTHORIZATION_TABLE_NAME}
      FLICKR_KEY: ${file(./serverless.variables.${self:provider.stage, 'dev'}.yml):FLICKR_KEY}
      FLICKR_USER_ID: ${file(./serverless.variables.${self:provider.stage, 'dev'}.yml):FLICKR_USER_ID}
      FLICKR_PHOTOSET_ID: ${file(./serverless.variables.${self:provider.stage, 'dev'}.yml):FLICKR_PHOTOSET_ID}
      GOOGLE_CLIENT_ID: ${file(./serverless.variables.${self:provider.stage, 'dev'}.yml):GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${file(./serverless.variables.${self:provider.stage, 'dev'}.yml):GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URI: ${file(./serverless.variables.${self:provider.stage, 'dev'}.yml):GOOGLE_REDIRECT_URI}
      FRONT_END_DOMAIN: ${file(./serverless.variables.${self:provider.stage, 'dev'}.yml):FRONT_END_DOMAIN}
    events:
      - http:
          method: ANY
          path: /{proxy+}
          cors: true
      - http:
          method: ANY
          path: /api/{proxy+}
          cors: true

custom:
  myRegion: ${opt:region, 'us-east-1'}
  client:
    bucketName: madisonquotebot.com
    distributionFolder: 'dist'
    errorDocument: index.html
    redirect:
      protocol: https
  customDomain:
    domainName: api.madisonquotebot.com
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true
    certificateName: '*.madisonquotebot.com'